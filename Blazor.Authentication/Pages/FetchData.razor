@page "/fetchdata"
@using Microsoft.AspNetCore.Authorization
@inject HttpClient Http
@attribute [Authorize]
@using Microsoft.AspNetCore.Components.Authorization
@using Blazor.Authentication.Services
@using System.Security.Claims

<AuthorizeView>
    <NotAuthorized>
        <p>Aka, siz bu bu pagedan foydanish uchun siz login qilishiz kerak</p>
    </NotAuthorized>
    <Authorized>
            
        <PageTitle>Weather forecast</PageTitle>
        
        <p class="btn btn-danger">@username</p>
        <h1>Weather forecast</h1>

        <p>This component demonstrates fetching data from the server.</p>

        @if (forecasts == null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            <table class="table">
                <thead>
                <tr>
                    <th>Date</th>
                    <th>Temp. (C)</th>
                    <th>Temp. (F)</th>
                    <th>Summary</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var forecast in forecasts)
                {
                    <tr>
                        <td>@forecast.Date.ToShortDateString()</td>
                        <td>@forecast.TemperatureC</td>
                        <td>@forecast.TemperatureF</td>
                        <td>@forecast.Summary</td>
                    </tr>
                }
                </tbody>
            </table>
        }

        

    </Authorized>
</AuthorizeView>

@code {
    private WeatherForecast[]? forecasts;
    private string username;
    protected override async Task OnInitializedAsync()
    {
        var customStateProvider = (CustomAuthenticationStateProvider)StateProvider;
        var state = await customStateProvider.GetAuthenticationStateAsync();
        var user = state.User;
        username = user.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Name).Value;

        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("sample-data/weather.json");
    }

    public class WeatherForecast
    {
        public DateOnly Date { get; set; }

        public int TemperatureC { get; set; }

        public string? Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }

}


